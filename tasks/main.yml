---
- name: Include setup task
  ansible.builtin.include_tasks: setup.yml

- name: Edit postgresql config
  ansible.builtin.lineinfile:
    path: "/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf"
    regexp: "{{ item.key }} ="
    line: "{{ item.key }} = {{ item.value | quote }}"
  with_dict: "{{ postgresql_config }}"
  notify: Restart Postgres Server

- name: Edit pg_hba config
  community.postgresql.postgresql_pg_hba:
    dest: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf"
    contype: "{{ item.type }}"
    users: "{{ item.user }}"
    source: "{{ item.address }}"
    databases: "{{ item.database }}"
    method: "{{ item.method }}"
  with_items: "{{ postgresql_hba_extra_entries }}"
  notify: Restart Postgres Server

- name: Start postgresql
  ansible.builtin.service:
    name: postgresql
    state: started
    enabled: true

- name: Ensure PostgreSQL users are present
  community.postgresql.postgresql_user:
    name: "{{ user.name }}"
    password: "{{ user.password | d(omit) }}"
    state: "{{ user.state | d('present') }}"
  with_items: "{{ postgresql_users }}"
  loop_control:
    loop_var: user
  no_log: true
  become: true
  become_user: "{{ _postgresql_user }}"

- name: Ensure PostgreSQL databases are present
  community.postgresql.postgresql_db:
    name: "{{ db.name }}"
    lc_collate: "{{ db.lc_collate | d('en_US.UTF-8') }}"
    lc_ctype: "{{ db.lc_ctype | d('en_US.UTF-8') }}"
    encoding: "{{ db.encoding | d('UTF-8') }}"
    template: "{{ db.template | d('template0') }}"
    owner: "{{ db.owner | d(_postgresql_user) }}"
    state: "{{ db.state | d('present') }}"
  with_items: "{{ postgresql_databases }}"
  loop_control:
    loop_var: db
  become: true
  become_user: "{{ _postgresql_user }}"

- name: Setup master
  ansible.builtin.include_tasks: "master.yml"
  when: postgresql_cluster and inventory_hostname in groups[postgresql_cluster_master_group]

- name: Setup replica
  ansible.builtin.include_tasks: replica.yml
  when: postgresql_cluster and inventory_hostname in groups[postgresql_cluster_replica_group]
